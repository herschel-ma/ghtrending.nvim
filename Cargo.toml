[workspace]
members = ["crates/ghtrending_nvim"]
resolver = "2"

[workspace.package]
authors = ["herschelma666@gmail.com"]
edition = "2021"
version = "0.1.1"


[workspace.dependencies]
reqwest = "0.11.22"
scraper = "0.18.1"
serde = { version = "1.0.9", features = ["derive"] }
serde_json = "1.0.108"
futures = "0.3"
tokio = { version = "1.35.0", features = ["full"] }
tokio-serde = { version = "0.8.0", features = [
  "serde_json",
  "bincode",
  "json",
  "bincode",
] }
tokio-util = { version = "0.7.10", features = ["codec"] }
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
mlua = { version = "0.9.4", features = [
  "luajit",
  "module",
  "async",
  "send",
  "serde",
  "serialize",
  'macros',
] }

[workspace.lints.rust]
unsafe_code = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -2 }
# Allowed pedantic lints
char_lit_as_u8 = "allow"
collapsible_else_if = "allow"
collapsible_if = "allow"
implicit_hasher = "allow"
map_unwrap_or = "allow"
match_same_arms = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
similar_names = "allow"
too_many_lines = "allow"
too_many_arguments = "allow"
# Disallowed restriction lints
# print_stdout = "warn"
# print_stderr = "warn"
uninlined_format_args = "forbid"
dbg_macro = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
get_unwrap = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
rest_pat_in_fully_bound_structs = "warn"
